# Configuration file

chatbox {
    # Show the x, y, and z coordinates of the ChatBox in chat messages
    B:displayCoords=false

    # Range for the ChatBox peripheral's ability to 'hear' the chat, set to -1 for infinite
    I:readRange=-1

    # Range for the ChatBox peripheral's say function, set to -1 for infinite
    I:sayRange=64

    # Maximum number of messages per second a ChatBox peripheral can 'say'
    I:sayRate=1

    # Range for the ChatBox peripheral's tell (private message) function, set to -1 for infinite
    I:tellRange=64
}


"communications antenna" {
    # The delay (in ticks) that the BitNet Mini Antenna takes to send a message per 100 block distance (rounded up).
    I:miniAntennaMessageDelay=3

    # The range in blocks the BitNet Mini Antenna can transmit
    I:miniAntennaRange=650

    # The range in blocks the BitNet Mini Antenna can transmit during a storm
    I:miniAntennaRangeStorm=650
}


"communications tower" {
    # Whether a BitNet Communications Tower should keep the chunk it resides in loaded
    B:keepChunkLoaded=true

    # The delay (in ticks) that the BitNet Communications Tower takes to send a message per 100 block distance (rounded up).
    I:towerMessageDelay=3

    # The range in blocks the BitNet Communications Tower can transmit
    I:towerRange=3000

    # The range in blocks the BitNet Communications Tower can transmit during a storm
    I:towerRangeStorm=2400
}


debug {
    # Print debugging messages to the console. WARNING: Spammy, only enable this if theoriginalbit has asked you to
    B:debugMessages=false
}


"density scanning turtle" {
    # Add density mappings (semi-colon separated) for mod blocks to the Density Scanner in the format [modId]:[blockName]@[density]; 
    # single mapping example: MoarPeripherals:blockIronNote@5.45
    # multi-mapping example:  MoarPeripherals:blockIronNote@5.45;MoarPeripherals:blockChatBox@4.45 [default: ]
    S:customDensity=
}


enabled {
    # Enable the ChatBox
    B:ChatBox=true

    # Enable the Communications Antenna
    B:"Communications Antenna"=true

    # Enable the Communications Tower
    B:"Communications Tower"=true

    # Enable the Computer Crafter
    B:"Computer Crafter"=true

    # Enable the Firework Launcher
    B:"Firework Launcher"=true

    # Enable the Iron Note
    B:"Iron Note"=true

    # Enable the Keyboard
    B:Keyboard=true

    # Enable the Player Detector
    B:"Player Detector"=true

    # Enable the Sonic Screwdriver
    B:"Sonic Screwdriver"=true

    # Enable the Turtle Teleport
    B:"Turtle Teleport"=true
}


"furnace turtle" {
    I:fuelConsumption=20
}


"iron note" {
    # The range at which the note can be heard. Note: Does not seem to work for audio, yet (?).
    I:noteRange=64
}


keyboard {
    # The range that a keyboard can connect to a computer from. This cannot be infinite.
    I:keyboardRange=16
}


render {
    # Whether or not to render items and blocks, related to the printer, normally or as models.
    B:printerModel=false

    # Whether or not to render the Sonic Screwdriver normally or as a model
    B:sonicModel=true
}


"turtle teleport" {
    # The multiplier for the fuel consumption to teleport the Turtle. Formula: Euclidean distance * multiplier
    D:fuelMultiplier=1.5
}


upgrades {
    # Enable the Compass Turtle
    B:"Compass Turtle"=true

    # Enable the Density Scanning Turtle
    B:"Density Scanning Turtle"=true

    # Enable the Feeding Turtle
    B:"Feeding Turtle"=true

    # Enable the Furnace Turtle
    B:"Furnace Turtle"=true

    # Enable the Igniter Turtle
    B:"Igniter Turtle"=true

    # Enable the Shears Turtle
    B:"Shears Turtle"=true

    # Enable the Solar Turtle
    B:"Solar Turtle"=true
}


